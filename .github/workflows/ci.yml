name: CI

env:
  JDK_JAVA_OPTIONS: -XX:+PrintCommandLineFlags -Xmx4G -Xss16M -XX:+UseG1GC # JDK_JAVA_OPTIONS is _the_ env. variable to use for modern Java
  JVM_OPTS: -XX:+PrintCommandLineFlags -Xmx4G -Xss16M -XX:+UseG1GC # for Java 8 only (sadly, it is not modern enough for JDK_JAVA_OPTIONS)
  NODE_OPTIONS: --max_old_space_size=6144

on:
  pull_request:
  push:
    branches: [main]
  release:
    types:
      - published

jobs:
  lint:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v10
      - name: Cache scala dependencies
        uses: coursier/cache-action@v5
      - name: Lint code
        run: sbt fmtCheck

  mdoc:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v10
      - name: Cache scala dependencies
        uses: coursier/cache-action@v5
      - name: Check Document Generation
        run: sbt compileDocs

  publishLocal:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v10
      - name: Cache scala dependencies
        uses: coursier/cache-action@v5
      - name: Check that building packages works
        run: ./sbt +publishLocal

  test:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        java: ['adopt@1.8', 'adopt@1.11']
        scala: ['2.12.15', '2.13.10']
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}
      - name: Cache scala dependencies
        uses: coursier/cache-action@v5
      - name: Run tests
        run: sbt ++${{ matrix.scala }}! test

  integrationTest:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        java: ['adopt@1.8', 'adopt@1.11']
        scala: ['2.12.15', '2.13.10']
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}
      - name: Cache scala dependencies
        uses: coursier/cache-action@v5
      - name: Run tests
        run: sbt ++${{ matrix.scala }}! "IntegrationTest / test"

  publish:
    runs-on: ubuntu-20.04
    needs: [lint, test, integrationTest]
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - uses: olafurpg/setup-scala@v10
      - run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
